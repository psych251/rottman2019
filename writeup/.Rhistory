Dosage %>%
group_by(Study, Race) %>%
dplyr::summarize(race = n())
Dosage.Long <- select(Dosage, ID, Study, Asbestos_L_1:Whispers_H_3) %>%
gather(Asbestos_L_1:Whispers_H_3, key = "Item", value = "Rating", na.rm = T) %>%
separate(col = Item, into = c("Item", "Dose", "Question"), sep = "_") %>%
arrange(ID)
Dosage.Long$Dose <- factor(Dosage.Long$Dose, levels = c("L", "H"),
labels = c("Low", "High"), ordered = is.ordered(TRUE))
Dosage.Long$Question <- factor(Dosage.Long$Question,
levels = c("1", "2", "3", "4", "5", "6",
"7", "8", "9", "10"),
labels = c("Wrong", "Harmful", "Impure", "Angry",
"Disgusted", "RejectFromComm",
"RejectOnCoop", "KindOfPerson",
"ActSimilarly", "MoralIntegrity"))
Dosage.Long$Domain <- ifelse(Dosage.Long$Item == "Asbestos" | Dosage.Long$Item == "Bruise"
| Dosage.Long$Item == "Bully" | Dosage.Long$Item == "Deer"
| Dosage.Long$Item == "Punch" | Dosage.Long$Item == "Rock"
| Dosage.Long$Item == "Starve" | Dosage.Long$Item == "Uncons"
| Dosage.Long$Item == "Blood" | Dosage.Long$Item == "Choke"
| Dosage.Long$Item == "HazChem" | Dosage.Long$Item == "HotSauce"
| Dosage.Long$Item == "Mercury" | Dosage.Long$Item == "PetFish"
| Dosage.Long$Item == "PoisonLadybug"
| Dosage.Long$Item == "Thumbtack", 0,
ifelse(Dosage.Long$Item == "Goatsex" | Dosage.Long$Item == "Heroin"
| Dosage.Long$Item == "Mast" | Dosage.Long$Item == "Incest"
| Dosage.Long$Item == "Cannibal" | Dosage.Long$Item == "Corpse"
| Dosage.Long$Item == "Sacred" | Dosage.Long$Item == "Graff"
| Dosage.Long$Item == "Ashes" | Dosage.Long$Item == "CowBlood"
| Dosage.Long$Item == "EatCorpse"
| Dosage.Long$Item == "EatLadybug"
| Dosage.Long$Item == "Genitals" | Dosage.Long$Item == "Genome"
| Dosage.Long$Item == "Urine" | Dosage.Long$Item == "Whispers",
1, 99))
Dosage.Long$Domain <- factor(Dosage.Long$Domain, levels = c("0", "1"),
labels = c("Harm", "Purity"))
Dosage.Long$DoseType <- ifelse(Dosage.Long$Item == "Asbestos"
| Dosage.Long$Item == "Bully" | Dosage.Long$Item == "Starve"
| Dosage.Long$Item == "Uncons" | Dosage.Long$Item == "Goatsex"
| Dosage.Long$Item == "Heroin" | Dosage.Long$Item == "Incest"
| Dosage.Long$Item == "Mast", 0,
ifelse(Dosage.Long$Item == "Bruise" | Dosage.Long$Item == "Deer"
| Dosage.Long$Item == "Punch" | Dosage.Long$Item == "Rock"
| Dosage.Long$Item == "Cannibal" | Dosage.Long$Item == "Corpse"
| Dosage.Long$Item == "Graff" | Dosage.Long$Item == "Sacred",
1, 99))
Dosage.Long$DoseType <- factor(Dosage.Long$DoseType, levels = c("0", "1"),
labels = c("Frequency", "Magnitude"))
Dosage.Long$ID <- factor(Dosage.Long$ID)
Dosage.Long$Item <- factor(Dosage.Long$Item)
Dosage.Tidy <- spread(Dosage.Long, "Question", "Rating")
Dosage.Pilot <- filter(Dosage, Study == "Pilot Study")
Dosage.S1 <- filter(Dosage, Study == "Study 1")
Dosage.S2 <- filter(Dosage, Study == "Study 2")
Dosage.S3 <- filter(Dosage, Study == "Study 3")
Dosage.Long.Pilot <- filter(Dosage.Long, Study == "Pilot Study")
Dosage.Long.S1 <- filter(Dosage.Long, Study == "Study 1")
Dosage.Long.S2 <- filter(Dosage.Long, Study == "Study 2")
Dosage.Long.S3 <- filter(Dosage.Long, Study == "Study 3")
Dosage.Tidy.Pilot <- filter(Dosage.Tidy, Study == "Pilot Study")
Dosage.Tidy.S1 <- filter(Dosage.Tidy, Study == "Study 1")
Dosage.Tidy.S2 <- filter(Dosage.Tidy, Study == "Study 2")
Dosage.Tidy.S3 <- filter(Dosage.Tidy, Study == "Study 3")
# Use a filter to view ONLY the harm-related questions and exclude the purity-related questions
Dosage.Tidy.S1_Harm <- Dosage.Tidy.S1  %>%
filter(Domain == "Harm") # keep only the Harm prompts and exclude Purity
# Assign all the high-dosage harm violations to x
x <- Dosage.Tidy.S1_Harm %>%
filter(Dose == "High")
# Assign all the low-dosage harm violations to y
y <- Dosage.Tidy.S1_Harm %>%
filter(Dose == "Low")
# Run a t-test on x and y
t.test(x$Wrong, y$Wrong)
filename <- "FINALdata.csv"
headers = read_csv(filename, col_names = FALSE, n_max = 1)
df = read_csv(filename, skip = 3, col_names = FALSE)
colnames(df)= headers
#### Inspect data
colnames(df)
View(data)
View(data)
View(df)
#### Data exclusion / filtering
data <- df %>%
filter(StartDate > "12/4/2019 23:37") %>% # keep only the results collected after Dec 4, 2019 at 11:37 pm.
filter( (Att1_8 > 49) & (Att2_4 < 51) )  ## Include only rows where the person passed the first and second attention checks.
# To track how many people were excluded
excluded_data <- df %>%
filter(StartDate > "12/4/2019 23:37") %>%
filter( (Att1_8 <= 49) | (Att2_4 >= 51) )
nrow(excluded_data) # counts the number of rows that have been excluded
nrow(data) # counts number of participants that were not excluded
d <- data %>%
pivot_longer(cols = A1_10:Att2_4, names_to = "Prompt", values_to = "Rating") %>% # pivots into long form
select(c("Prompt", "Rating", "mTurkCode")) %>% # keeps only the columns I need
mutate(Purity_Violation = grepl("2", x = Prompt)) %>% # adds a column that says "TRUE" if the violation is a purity violation and "FALSE" if the violation is a harm violation
mutate(High_Dosage = grepl("'", x = Prompt)) %>% # adds a column that says "TRUE" if the violation is the high-dosage version violation and "FALSE" if the violation is the low-dosage version violation
filter(Prompt != "Att1_8") %>% # remove the wrongness ratings for the first attention check
filter(Prompt != "Att2_4") # remove the wrongess ratings for the second attention check
colnames(d)
View(d)
means <- d %>%
group_by(Purity_Violation, High_Dosage) %>%
summarize(meanWrongness = (mean(Rating, na.rm=T)))
head(means)
View(means)
View(d)
means <- d %>%
group_by(mTurkCode, Purity_Violation, High_Dosage) %>%
summarize(meanWrongness = (mean(Rating, na.rm=T)))
View(means)
summary(means)
means <- d %>%
group_by(mTurkCode, Purity_Violation, High_Dosage) %>%
summarize(meanWrongness = (mean(Rating, na.rm=T)))
means <- d %>%
group_by(mTurkCode, Purity_Violation, High_Dosage) %>%
summarize(meanWrongness = (mean(Rating, na.rm=T)))
means <- d %>%
group_by(mTurkCode, Purity_Violation, High_Dosage) %>%
summarize(meanWrongness = (mean(Rating, na.rm=T)))
means
means <- d %>%
group_by(Purity_Violation, High_Dosage) %>%
summarize(meanWrongness = (mean(Rating, na.rm=T)))
means
means <- d %>%
group_by(High_Dosage, Purity_Violation) %>%
summarize(meanWrongness = (mean(Rating, na.rm=T)))
means
# Mike's alternative code.
# get difference scores for each participant
ms <- d %>%
group_by(mTurkCode, Purity_Violation) %>%
summarise(diff = Wrongness[High_Dosage] - Wrongness[!High_Dosage])
mss <- d %>%
group_by(mTurkCode, Purity_Violation, High_Dosage) %>%
summarise(Rating = mean(Rating, na.rm=TRUE))
mss
View(mss)
View(d)
View(mss)
# Mike's alternative code for the SD and mean analysis:
# I'm not sure if I'm doing the SD analysis correctly, so I'll go to Mike's office hours and work through his suggestion. Right now the code is not working.
# get condition means for each participant
mss <- d %>%
group_by(mTurkCode, Purity_Violation, High_Dosage) %>%
summarise(Rating = mean(Rating, na.rm=TRUE))
# get difference scores for each participant.
diffs <- mss %>%
summarise(diff = Rating[High_Dosage] - Rating[!High_Dosage]) # this code is not working so I'll comment out
setwd("C:/Users/C. Ceballos/Desktop/PSYCH 251/rottman2019_new/writeup")
#Import Rottman's original data and clean and tidy it, using Rottman's own code
# I tried doing this code on my own but it was complicated, so I just used Rottman's own code
## R code for running all analyses
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if(length(new.pkg)) install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)}
packages <- c("lme4", "lmerTest", "reshape2", "Rmisc", "magrittr", "psych", "lsr",
"tidyverse", "ggthemes", "viridis", "grid", "simr", "emmeans")
ipak(packages)
custom.theme <- theme_tufte() + theme(panel.background = element_blank(),
legend.key = element_blank(), legend.background = element_blank(),
legend.position = "right", legend.title = element_text(color = "black",
face = "bold", size = 14, family = "Helvetica", hjust = .5),
legend.text = element_text(color = "black", face = "bold", size = 12,
family = "Helvetica"), strip.background = element_blank(),
strip.text = element_text(color = "black", face = "bold", size = 12,
family = "Helvetica"), panel.grid = element_blank(), axis.text =
element_text(color = "black", face = "bold", size = 12,
family = "Helvetica"), axis.line = element_line(color = "black"),
axis.title = element_text(color = "black", face = "bold", size = 14,
family = "Helvetica"), axis.text.x = element_text(vjust = .6))
theme_set(custom.theme)
posn.d <- position_dodge(0.95)
emm_options(opt.digits = FALSE)
#setwd("~/Desktop/Research/Dosage")
Dosage.All <- read.csv('DosageData.csv', header = TRUE)
Dosage.All$Study <- factor(Dosage.All$Study, levels = c(0, 1, 2, 3),
labels = c("Pilot Study", "Study 1", "Study 2", "Study 3"),
ordered = is.ordered(FALSE))
Dosage.All$Gender <- factor(Dosage.All$Gender, levels = c(1, 2, 3),
labels = c("Male", "Female", "Other"), ordered = is.ordered(FALSE))
Dosage.All$Race <- factor(Dosage.All$Race, levels = c(1, 2, 3, 4, 5, 6),
labels = c("White", "Asian", "African American", "Hispanic or Latino",
"Native American", "Other"), ordered = is.ordered(FALSE))
Dosage.All$English <- factor(Dosage.All$English, levels = c(1, 2),
labels = c("Fluent in English", "Not Fluent in English"),
ordered = is.ordered(FALSE))
Dosage.All$Edu <- factor(Dosage.All$Edu, levels = c(1, 2, 3, 4, 5, 6),
labels = c("Some high school", "High school diploma or equivalent",
"Some college", "College degree", "Some graduate school",
"Graduate degree"), ordered = is.ordered(TRUE))
Dosage.All$Nat <- factor(Dosage.All$Nat, levels = c(31, 114, 140, 185, 186, 192),
labels = c("Canada", "Mexico", "Poland", "United Kingdom",
"United States", "Vietnam"), ordered = is.ordered(FALSE))
as_tibble(Dosage.All)
glimpse(Dosage.All)
Dosage.All$Exclude <- ifelse((Dosage.All$Planet_X_1 < 50), 1,
ifelse((Dosage.All$Charity_X_1 > 50), 2, 0))
which(duplicated(Dosage.All$WorkerID))
Dosage.All[c(108, 111, 116, 127, 138, 164, 193, 232, 261, 262, 268, 284, 314, 315, 320,
326, 336, 337, 338, 350, 356, 363, 364, 370, 373, 379, 392, 393, 400, 402,
407, 443), 453] = 3
Dosage.All$Exclude <- factor(Dosage.All$Exclude, levels = c(0, 1, 2, 3),
labels = c("Don't Exclude", "Missed Planet Attention Check",
"Missed Charity Attention Check", "Duplicate Worker ID"),
ordered = is.ordered(TRUE))
Dosage.All %>%
group_by(Study, Exclude, add = TRUE) %>%
dplyr::summarize(excluded = n())
Dosage <- filter(Dosage.All, Exclude == "Don't Exclude")
Dosage %>%
group_by(Study) %>%
dplyr::summarize(mean.age = mean(Age), sd.age = sd(Age))
Dosage %>%
group_by(Study, Gender) %>%
dplyr::summarize(gender = n())
Dosage %>%
group_by(Study, Race) %>%
dplyr::summarize(race = n())
Dosage.Long <- select(Dosage, ID, Study, Asbestos_L_1:Whispers_H_3) %>%
gather(Asbestos_L_1:Whispers_H_3, key = "Item", value = "Rating", na.rm = T) %>%
separate(col = Item, into = c("Item", "Dose", "Question"), sep = "_") %>%
arrange(ID)
Dosage.Long$Dose <- factor(Dosage.Long$Dose, levels = c("L", "H"),
labels = c("Low", "High"), ordered = is.ordered(TRUE))
Dosage.Long$Question <- factor(Dosage.Long$Question,
levels = c("1", "2", "3", "4", "5", "6",
"7", "8", "9", "10"),
labels = c("Wrong", "Harmful", "Impure", "Angry",
"Disgusted", "RejectFromComm",
"RejectOnCoop", "KindOfPerson",
"ActSimilarly", "MoralIntegrity"))
Dosage.Long$Domain <- ifelse(Dosage.Long$Item == "Asbestos" | Dosage.Long$Item == "Bruise"
| Dosage.Long$Item == "Bully" | Dosage.Long$Item == "Deer"
| Dosage.Long$Item == "Punch" | Dosage.Long$Item == "Rock"
| Dosage.Long$Item == "Starve" | Dosage.Long$Item == "Uncons"
| Dosage.Long$Item == "Blood" | Dosage.Long$Item == "Choke"
| Dosage.Long$Item == "HazChem" | Dosage.Long$Item == "HotSauce"
| Dosage.Long$Item == "Mercury" | Dosage.Long$Item == "PetFish"
| Dosage.Long$Item == "PoisonLadybug"
| Dosage.Long$Item == "Thumbtack", 0,
ifelse(Dosage.Long$Item == "Goatsex" | Dosage.Long$Item == "Heroin"
| Dosage.Long$Item == "Mast" | Dosage.Long$Item == "Incest"
| Dosage.Long$Item == "Cannibal" | Dosage.Long$Item == "Corpse"
| Dosage.Long$Item == "Sacred" | Dosage.Long$Item == "Graff"
| Dosage.Long$Item == "Ashes" | Dosage.Long$Item == "CowBlood"
| Dosage.Long$Item == "EatCorpse"
| Dosage.Long$Item == "EatLadybug"
| Dosage.Long$Item == "Genitals" | Dosage.Long$Item == "Genome"
| Dosage.Long$Item == "Urine" | Dosage.Long$Item == "Whispers",
1, 99))
Dosage.Long$Domain <- factor(Dosage.Long$Domain, levels = c("0", "1"),
labels = c("Harm", "Purity"))
Dosage.Long$DoseType <- ifelse(Dosage.Long$Item == "Asbestos"
| Dosage.Long$Item == "Bully" | Dosage.Long$Item == "Starve"
| Dosage.Long$Item == "Uncons" | Dosage.Long$Item == "Goatsex"
| Dosage.Long$Item == "Heroin" | Dosage.Long$Item == "Incest"
| Dosage.Long$Item == "Mast", 0,
ifelse(Dosage.Long$Item == "Bruise" | Dosage.Long$Item == "Deer"
| Dosage.Long$Item == "Punch" | Dosage.Long$Item == "Rock"
| Dosage.Long$Item == "Cannibal" | Dosage.Long$Item == "Corpse"
| Dosage.Long$Item == "Graff" | Dosage.Long$Item == "Sacred",
1, 99))
Dosage.Long$DoseType <- factor(Dosage.Long$DoseType, levels = c("0", "1"),
labels = c("Frequency", "Magnitude"))
Dosage.Long$ID <- factor(Dosage.Long$ID)
Dosage.Long$Item <- factor(Dosage.Long$Item)
Dosage.Tidy <- spread(Dosage.Long, "Question", "Rating")
Dosage.Pilot <- filter(Dosage, Study == "Pilot Study")
Dosage.S1 <- filter(Dosage, Study == "Study 1")
Dosage.S2 <- filter(Dosage, Study == "Study 2")
Dosage.S3 <- filter(Dosage, Study == "Study 3")
Dosage.Long.Pilot <- filter(Dosage.Long, Study == "Pilot Study")
Dosage.Long.S1 <- filter(Dosage.Long, Study == "Study 1")
Dosage.Long.S2 <- filter(Dosage.Long, Study == "Study 2")
Dosage.Long.S3 <- filter(Dosage.Long, Study == "Study 3")
Dosage.Tidy.Pilot <- filter(Dosage.Tidy, Study == "Pilot Study")
Dosage.Tidy.S1 <- filter(Dosage.Tidy, Study == "Study 1")
Dosage.Tidy.S2 <- filter(Dosage.Tidy, Study == "Study 2")
Dosage.Tidy.S3 <- filter(Dosage.Tidy, Study == "Study 3")
# Use a filter to view ONLY the harm-related questions and exclude the purity-related questions
Dosage.Tidy.S1_Harm <- Dosage.Tidy.S1  %>%
filter(Domain == "Harm") # keep only the Harm prompts and exclude Purity
# Assign all the high-dosage harm violations to x
x <- Dosage.Tidy.S1_Harm %>%
filter(Dose == "High")
# Assign all the low-dosage harm violations to y
y <- Dosage.Tidy.S1_Harm %>%
filter(Dose == "Low")
# Run a t-test on x and y
t.test(x$Wrong, y$Wrong)
filename <- "FINALdata.csv"
headers = read_csv(filename, col_names = FALSE, n_max = 1)
df = read_csv(filename, skip = 3, col_names = FALSE)
colnames(df)= headers
#### Inspect data
colnames(df)
#### Data exclusion / filtering
data <- df %>%
filter(StartDate > "12/4/2019 23:37") %>% # keep only the results collected after Dec 4, 2019 at 11:37 pm.
filter( (Att1_8 > 49) & (Att2_4 < 51) )  ## Include only rows where the person passed the first and second attention checks.
# To track how many people were excluded
excluded_data <- df %>%
filter(StartDate > "12/4/2019 23:37") %>%
filter( (Att1_8 <= 49) | (Att2_4 >= 51) )
nrow(excluded_data) # counts the number of rows that have been excluded
nrow(data) # counts number of participants that were not excluded
d <- data %>%
pivot_longer(cols = A1_10:Att2_4, names_to = "Prompt", values_to = "Rating") %>% # pivots into long form
select(c("Prompt", "Rating", "mTurkCode")) %>% # keeps only the columns I need
mutate(Purity_Violation = grepl("2", x = Prompt)) %>% # adds a column that says "TRUE" if the violation is a purity violation and "FALSE" if the violation is a harm violation
mutate(High_Dosage = grepl("'", x = Prompt)) %>% # adds a column that says "TRUE" if the violation is the high-dosage version violation and "FALSE" if the violation is the low-dosage version violation
filter(Prompt != "Att1_8") %>% # remove the wrongness ratings for the first attention check
filter(Prompt != "Att2_4") # remove the wrongess ratings for the second attention check
means <- d %>%
group_by(High_Dosage, Purity_Violation) %>%
summarize(meanWrongness = (mean(Rating, na.rm=T)))
means
# Now I'll find the difference between high-dosage  and low-dosage harm violations, and high-dosage and low-dosage purity violations
mean_Harm_LowDosage <- means[1,3]
mean_Harm_HighDosage <- means[2,3]
mean_Purity_LowDosage <- means[3,3]
mean_Purity_HighDosage <- means[4,3]
diff_means_harms <- mean_Harm_HighDosage - mean_Harm_LowDosage
diff_means_purity <- mean_Purity_HighDosage - mean_Purity_LowDosage
diff_means_harms
diff_means_purity
# First I'll do the analysis for the harm violations only.
sd_data <- d %>%
filter(Purity_Violation == FALSE) %>%
group_by(mTurkCode, Purity_Violation, High_Dosage) %>%
summarize(Wrongness = (mean(Rating, na.rm=T)))
wider_d <- sd_data %>%
pivot_wider(id_cols = mTurkCode, names_from = High_Dosage, values_from = Wrongness) %>%
rename(HIGH = "TRUE", LOW = "FALSE") %>%
mutate(Indv_Diff = HIGH - LOW)
filename <- "FINALdata.csv"
headers = read_csv(filename, col_names = FALSE, n_max = 1)
df = read_csv(filename, skip = 3, col_names = FALSE)
colnames(df)= headers
#### Inspect data
colnames(df)
library(foreign) # for reading spss formatted data
library(tidyverse)
filename <- "FINALdata.csv"
headers = read_csv(filename, col_names = FALSE, n_max = 1)
df = read_csv(filename, skip = 3, col_names = FALSE)
colnames(df)= headers
#### Inspect data
colnames(df)
#### Data exclusion / filtering
data <- df %>%
filter(StartDate > "12/4/2019 23:37") %>% # keep only the results collected after Dec 4, 2019 at 11:37 pm.
filter( (Att1_8 > 49) & (Att2_4 < 51) )  ## Include only rows where the person passed the first and second attention checks.
# To track how many people were excluded
excluded_data <- df %>%
filter(StartDate > "12/4/2019 23:37") %>%
filter( (Att1_8 <= 49) | (Att2_4 >= 51) )
nrow(excluded_data) # counts the number of rows that have been excluded
nrow(data) # counts number of participants that were not excluded
setwd("C:/Users/C. Ceballos/Desktop/PSYCH 251/rottman2019_new/writeup")
library(foreign) # for reading spss formatted data
library(tidyverse)
filename <- "FINALdata.csv"
headers = read_csv(filename, col_names = FALSE, n_max = 1)
df = read_csv(filename, skip = 3, col_names = FALSE)
colnames(df)= headers
#### Inspect data
colnames(df)
#### Data exclusion / filtering
data <- df %>%
filter(StartDate > "12/4/2019 23:37") %>% # keep only the results collected after Dec 4, 2019 at 11:37 pm.
filter( (Att1_8 > 49) & (Att2_4 < 51) )  ## Include only rows where the person passed the first and second attention checks.
# To track how many people were excluded
excluded_data <- df %>%
filter(StartDate > "12/4/2019 23:37") %>%
filter( (Att1_8 <= 49) | (Att2_4 >= 51) )
nrow(excluded_data) # counts the number of rows that have been excluded
nrow(data) # counts number of participants that were not excluded
d <- data %>%
pivot_longer(cols = A1_10:Att2_4, names_to = "Prompt", values_to = "Rating") %>% # pivots into long form
select(c("Prompt", "Rating", "mTurkCode")) %>% # keeps only the columns I need
mutate(Purity_Violation = grepl("2", x = Prompt)) %>% # adds a column that says "TRUE" if the violation is a purity violation and "FALSE" if the violation is a harm violation
mutate(High_Dosage = grepl("'", x = Prompt)) %>% # adds a column that says "TRUE" if the violation is the high-dosage version violation and "FALSE" if the violation is the low-dosage version violation
filter(Prompt != "Att1_8") %>% # remove the wrongness ratings for the first attention check
filter(Prompt != "Att2_4") # remove the wrongess ratings for the second attention check
means <- d %>%
group_by(High_Dosage, Purity_Violation) %>%
summarize(meanWrongness = (mean(Rating, na.rm=T)))
means
means <- d %>%
group_by(High_Dosage, Purity_Violation) %>%
summarize(meanWrongness = (mean(Rating, na.rm=T)))
means
library(foreign) # for reading spss formatted data
library(tidyverse)
filename <- "FINALdata.csv"
headers = read_csv(filename, col_names = FALSE, n_max = 1)
df = read_csv(filename, skip = 3, col_names = FALSE)
colnames(df)= headers
#### Inspect data
colnames(df)
#### Data exclusion / filtering
data <- df %>%
filter(StartDate > "12/4/2019 23:37") %>% # keep only the results collected after Dec 4, 2019 at 11:37 pm.
filter( (Att1_8 > 49) & (Att2_4 < 51) )  ## Include only rows where the person passed the first and second attention checks.
# To track how many people were excluded
excluded_data <- df %>%
filter(StartDate > "12/4/2019 23:37") %>%
filter( (Att1_8 <= 49) | (Att2_4 >= 51) )
nrow(excluded_data) # counts the number of rows that have been excluded
nrow(data) # counts number of participants that were not excluded
d <- data %>%
pivot_longer(cols = A1_10:Att2_4, names_to = "Prompt", values_to = "Rating") %>% # pivots into long form
select(c("Prompt", "Rating", "mTurkCode")) %>% # keeps only the columns I need
mutate(Purity_Violation = grepl("2", x = Prompt)) %>% # adds a column that says "TRUE" if the violation is a purity violation and "FALSE" if the violation is a harm violation
mutate(High_Dosage = grepl("'", x = Prompt)) %>% # adds a column that says "TRUE" if the violation is the high-dosage version violation and "FALSE" if the violation is the low-dosage version violation
filter(Prompt != "Att1_8") %>% # remove the wrongness ratings for the first attention check
filter(Prompt != "Att2_4") # remove the wrongess ratings for the second attention check
means <- d %>%
group_by(High_Dosage, Purity_Violation) %>%
summarize(meanWrongness = (mean(Rating, na.rm=T)))
means
# Now I'll find the difference between high-dosage  and low-dosage harm violations, and high-dosage and low-dosage purity violations
mean_Harm_LowDosage <- means[1,3]
mean_Harm_HighDosage <- means[2,3]
mean_Purity_LowDosage <- means[3,3]
mean_Purity_HighDosage <- means[4,3]
diff_means_harms <- mean_Harm_HighDosage - mean_Harm_LowDosage
diff_means_purity <- mean_Purity_HighDosage - mean_Purity_LowDosage
diff_means_harms
diff_means_purity
# First I'll do the analysis for the harm violations only.
sd_data <- d %>%
filter(Purity_Violation == FALSE) %>%
group_by(mTurkCode, Purity_Violation, High_Dosage) %>%
summarize(Wrongness = (mean(Rating, na.rm=T)))
wider_d <- sd_data %>%
pivot_wider(id_cols = mTurkCode, names_from = High_Dosage, values_from = Wrongness) %>%
rename(HIGH = "TRUE", LOW = "FALSE") %>%
mutate(Indv_Diff = HIGH - LOW)
setwd("C:/Users/C. Ceballos/Desktop/PSYCH 251/rottman2019_new/writeup")
#### Data exclusion / filtering
data <- df %>%
filter(StartDate > "12/4/2019 23:37") %>% # keep only the results collected after Dec 4, 2019 at 11:37 pm.
filter( (Att1_8 > 49) & (Att2_4 < 51) )  ## Include only rows where the person passed the first and second attention checks.
# To track how many people were excluded
excluded_data <- df %>%
filter(StartDate > "12/4/2019 23:37") %>%
filter( (Att1_8 <= 49) | (Att2_4 >= 51) )
nrow(excluded_data) # counts the number of rows that have been excluded
nrow(data) # counts number of participants that were not excluded
library(foreign) # for reading spss formatted data
library(tidyverse)
filename <- "FINALdata.csv"
headers = read_csv(filename, col_names = FALSE, n_max = 1)
df = read_csv(filename, skip = 3, col_names = FALSE)
colnames(df)= headers
#### Inspect data
colnames(df)
#### Data exclusion / filtering
data <- df %>%
filter(StartDate > "12/4/2019 23:37") %>% # keep only the results collected after Dec 4, 2019 at 11:37 pm.
filter( (Att1_8 > 49) & (Att2_4 < 51) )  ## Include only rows where the person passed the first and second attention checks.
# To track how many people were excluded
excluded_data <- df %>%
filter(StartDate > "12/4/2019 23:37") %>%
filter( (Att1_8 <= 49) | (Att2_4 >= 51) )
nrow(excluded_data) # counts the number of rows that have been excluded
nrow(data) # counts number of participants that were not excluded
d <- data %>%
pivot_longer(cols = A1_10:Att2_4, names_to = "Prompt", values_to = "Rating") %>% # pivots into long form
select(c("Prompt", "Rating", "mTurkCode")) %>% # keeps only the columns I need
mutate(Purity_Violation = grepl("2", x = Prompt)) %>% # adds a column that says "TRUE" if the violation is a purity violation and "FALSE" if the violation is a harm violation
mutate(High_Dosage = grepl("'", x = Prompt)) %>% # adds a column that says "TRUE" if the violation is the high-dosage version violation and "FALSE" if the violation is the low-dosage version violation
filter(Prompt != "Att1_8") %>% # remove the wrongness ratings for the first attention check
filter(Prompt != "Att2_4") # remove the wrongess ratings for the second attention check
d <- data %>%
pivot_longer(cols = A1_10:Att2_4, names_to = "Prompt", values_to = "Rating") %>% # pivots into long form
select(c("Prompt", "Rating", "mTurkCode")) %>% # keeps only the columns I need
mutate(Purity_Violation = grepl("2", x = Prompt)) %>% # adds a column that says "TRUE" if the violation is a purity violation and "FALSE" if the violation is a harm violation
mutate(High_Dosage = grepl("'", x = Prompt)) %>% # adds a column that says "TRUE" if the violation is the high-dosage version violation and "FALSE" if the violation is the low-dosage version violation
filter(Prompt != "Att1_8") %>% # remove the wrongness ratings for the first attention check
filter(Prompt != "Att2_4") # remove the wrongess ratings for the second attention check
means <- d %>%
group_by(High_Dosage, Purity_Violation) %>%
summarize(meanWrongness = (mean(Rating, na.rm=T)))
means
View(d)
means <- d %>%
group_by(Purity_Violation, High_Dosage) %>%
summarize(meanWrongness = (mean(Rating, na.rm=T)))
head(means)
View(d)
means <- d %>%
group_by(High_Dosage, Purity_Violation) %>%
summarize(meanRating = (mean(Rating, na.rm=T)))
means
means
means <- d %>%
group_by(Purity_Violation, High_Dosage) %>%
summarize(meanWrongness = (mean(Rating, na.rm=T)))
head(means)
library(foreign) # for reading spss formatted data
library(tidyverse)
filename <- "PilotBdata.csv"
headers = read_csv(filename, col_names = FALSE, n_max = 1)
